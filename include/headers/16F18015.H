// HEADER FILE
#pragma chip PIC16F18015, core 14 enh2, code 8192, ram 32 : 0x64F // 1024 bytes
#pragma ramdef  0x70 : 0x7F mapped_into_all_banks

#define INT_enh_style

#if __CC5X__ >= 3505
 #pragma wideConstData h
#endif


/* Predefined:
  char *FSR0, *FSR1;
  char INDF0, INDF1;
  char FSR0L, FSR0H, FSR1L, FSR1H;
  char W, WREG;
  char PCL, PCLATH, BSR, STATUS, INTCON;
  bit Carry, DC, Zero_, PD, TO;
*/


/*
* The following REGISTER and CONFIG definitions are generated automatically
* from INI and CFGDATA files for the specific device. Note that some bit names
* are modified compared to the names found in the INI file.
*
* The INI and CFGDATA files contains a copyright and disclaimer notice from Microchip.
* The following text is copied from the INI file and should contain the notice:

# Generated 19/07/2022 GMT

# Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
# All rights reserved.
# 
# This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
# 
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
# 
#     1. Redistributions of source code must retain the above copyright notice, this list of
#        conditions and the following disclaimer.
# 
#     2. Redistributions in binary form must reproduce the above copyright notice, this list
#        of conditions and the following disclaimer in the documentation and/or other
#        materials provided with the distribution. Publication is not required when
#        this file is used in an embedded application.
# 
#     3. Microchip's name may not be used to endorse or promote products derived from this
#        software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

*/

char PORTA    @ 0x0C;

char TRISA    @ 0x12;

char LATA     @ 0x18;

char PIR0     @ 0x8C;
char PIR1     @ 0x8D;
char PIR2     @ 0x8E;
char PIR3     @ 0x8F;
char PIR4     @ 0x90;

char PIE0     @ 0x96;
char PIE1     @ 0x97;
char PIE2     @ 0x98;
char PIE3     @ 0x99;
char PIE4     @ 0x9A;

char WDTCON   @ 0x18C;
char BORCON   @ 0x18D;
char PCON0    @ 0x18E;
char PCON1    @ 0x18F;

char TMR0L    @ 0x19C;
char TMR0H    @ 0x19D;
char PR0      @ TMR0H;
char T0CON0   @ 0x19E;
char T0CON1   @ 0x19F;

char OSCCON2  @ 0x20E;
char OSCCON3  @ 0x20F;
char OSCSTAT  @ 0x210;
char OSCEN    @ 0x211;
char OSCTUNE  @ 0x212;
char OSCFRQ   @ 0x213;
char ACTCON   @ 0x214;

char TMR1L    @ 0x28C;
char TMR1H    @ 0x28D;
char T1CON    @ 0x28E;
char T1GCON   @ 0x28F;
char PR1      @ T1GCON;
char T1GATE   @ 0x290;
char TMR1GATE @ T1GATE;
char T1CLK    @ 0x291;
char TMR1CLK  @ T1CLK;
char TMR3L    @ 0x292;
char TMR3H    @ 0x293;
char T3CON    @ 0x294;
char T3GCON   @ 0x295;
char PR3      @ T3GCON;
char T3GATE   @ 0x296;
char TMR3GATE @ T3GATE;
char T3CLK    @ 0x297;
char TMR3CLK  @ T3CLK;

char T2TMR    @ 0x30C;
char TMR2     @ T2TMR;
char T2PR     @ 0x30D;
char PR2      @ T2PR;
char T2CON    @ 0x30E;
char T2HLT    @ 0x30F;
char T2CLKCON @ 0x310;
char T2CLK    @ T2CLKCON;
char T2RST    @ 0x311;
char T4TMR    @ 0x312;
char TMR4     @ T4TMR;
char T4PR     @ 0x313;
char PR4      @ T4PR;
char T4CON    @ 0x314;
char T4HLT    @ 0x315;
char T4CLKCON @ 0x316;
char T4CLK    @ T4CLKCON;
char T4RST    @ 0x317;
char T6TMR    @ 0x318;
char TMR6     @ T6TMR;
char T6PR     @ 0x319;
char PR6      @ T6PR;
char T6CON    @ 0x31A;
char T6HLT    @ 0x31B;
char T6CLKCON @ 0x31C;
char T6CLK    @ T6CLKCON;
char T6RST    @ 0x31D;

char CCPR1L   @ 0x38C;
char CCPR1H   @ 0x38D;
char CCP1CON  @ 0x38E;
char CCP1CAP  @ 0x38F;
char CCPR2L   @ 0x390;
char CCPR2H   @ 0x391;
char CCP2CON  @ 0x392;
char CCP2CAP  @ 0x393;

char CCPTMRS0 @ 0x39F;

char PWM3DCL  @ 0x40C;
char PWM3DCH  @ 0x40D;
char PWM3CON  @ 0x40E;
char PWM4DCL  @ 0x40F;
char PWM4DCH  @ 0x410;
char PWM4CON  @ 0x411;
char PWM5DCL  @ 0x412;
char PWM5DCH  @ 0x413;
char PWM5CON  @ 0x414;

char PWMTMRS0 @ 0x41F;

char NCO1ACCL @ 0x48C;
char NCO1ACCH @ 0x48D;
char NCO1ACCU @ 0x48E;
char NCO1INCL @ 0x48F;
char NCO1INCH @ 0x490;
char NCO1INCU @ 0x491;
char NCO1CON  @ 0x492;
char NCO1CLK  @ 0x493;

char CWG1CLK  @ 0x50C;
char CWG1CLKCON @ CWG1CLK;
char CWG1ISM  @ 0x50D;
char CWG1DAT  @ CWG1ISM;
char CWG1DBR  @ 0x50E;
char CWG1DBF  @ 0x50F;
char CWG1CON0 @ 0x510;
char CWG1CON1 @ 0x511;
char CWG1AS0  @ 0x512;
char CWG1AS1  @ 0x513;
char CWG1STR  @ 0x514;

char CLCnCON  @ 0x58C;
char CLCnPOL  @ 0x58D;
char CLCnSEL0 @ 0x58E;
char CLCnSEL1 @ 0x58F;
char CLCnSEL2 @ 0x590;
char CLCnSEL3 @ 0x591;
char CLCnGLS0 @ 0x592;
char CLCnGLS1 @ 0x593;
char CLCnGLS2 @ 0x594;
char CLCnGLS3 @ 0x595;
char CLCSELECT @ 0x596;
char CLCDATA  @ 0x597;

char RC1REG   @ 0x60C;
char TX1REG   @ 0x60D;
char SP1BRGL  @ 0x60E;
char SP1BRGH  @ 0x60F;
char RC1STA   @ 0x610;
char TX1STA   @ 0x611;
char BAUD1CON @ 0x612;

char RC2REG   @ 0x616;
char TX2REG   @ 0x617;
char SP2BRGL  @ 0x618;
char SP2BRGH  @ 0x619;
char RC2STA   @ 0x61A;
char TX2STA   @ 0x61B;
char BAUD2CON @ 0x61C;

char SSP1BUF  @ 0x68C;
char SSP1ADD  @ 0x68D;
char SSP1MSK  @ 0x68E;
char SSP1STAT @ 0x68F;
char SSP1CON1 @ 0x690;
char SSP1CON2 @ 0x691;
char SSP1CON3 @ 0x692;

char SSP2BUF  @ 0x696;
char SSP2ADD  @ 0x697;
char SSP2MSK  @ 0x698;
char SSP2STAT @ 0x699;
char SSP2CON1 @ 0x69A;
char SSP2CON2 @ 0x69B;
char SSP2CON3 @ 0x69C;

char FVRCON   @ 0x100C;
char CPCON    @ 0x100D;

char ZCDCON   @ 0x101F;

char CM1CON0  @ 0x108C;
char CM1CON1  @ 0x108D;
char CM1NCH   @ 0x108E;
char CM1PCH   @ 0x108F;

char CMOUT    @ 0x109F;
char CMSTAT   @ CMOUT;

char DAC1CON  @ 0x110C;
char DAC1DATL @ 0x110D;

char NVMADRL  @ 0x1C8C;
char NVMADRH  @ 0x1C8D;
char NVMDATL  @ 0x1C8E;
char NVMDATH  @ 0x1C8F;
char NVMCON1  @ 0x1C90;
char NVMCON2  @ 0x1C91;

char ADLTHL   @ 0x1D0C;
char ADLTHH   @ 0x1D0D;
char ADUTHL   @ 0x1D0E;
char ADUTHH   @ 0x1D0F;
char ADERRL   @ 0x1D10;
char ADERRH   @ 0x1D11;
char ADSTPTL  @ 0x1D12;
char ADSTPTH  @ 0x1D13;
char ADFLTRL  @ 0x1D14;
char ADFLTRH  @ 0x1D15;
char ADACCL   @ 0x1D16;
char ADACCH   @ 0x1D17;
char ADACCU   @ 0x1D18;
char ADCNT    @ 0x1D19;
char ADRPT    @ 0x1D1A;
char ADPREVL  @ 0x1D1B;
char ADPREVH  @ 0x1D1C;
char ADRESL   @ 0x1D1D;
char ADRESH   @ 0x1D1E;
char ADPCH    @ 0x1D1F;

char ADACQL   @ 0x1D21;
char ADACQH   @ 0x1D22;
char ADCAP    @ 0x1D23;
char ADPREL   @ 0x1D24;
char ADPREH   @ 0x1D25;
char ADCON0   @ 0x1D26;
char ADCON1   @ 0x1D27;
char ADCON2   @ 0x1D28;
char ADCON3   @ 0x1D29;
char ADSTAT   @ 0x1D2A;
char ADREF    @ 0x1D2B;
char ADACT    @ 0x1D2C;
char ADCLK    @ 0x1D2D;
char ADCG1A   @ 0x1D2E;

char RA0PPS   @ 0x1D8C;
char RA1PPS   @ 0x1D8D;
char RA2PPS   @ 0x1D8E;

char RA4PPS   @ 0x1D90;
char RA5PPS   @ 0x1D91;

char PPSLOCK  @ 0x1E0C;
char INTPPS   @ 0x1E0D;
char T0CKIPPS @ 0x1E0E;
char T1CKIPPS @ 0x1E0F;
char T1GPPS   @ 0x1E10;
char T3CKIPPS @ 0x1E11;
char T3GPPS   @ 0x1E12;

char T2INPPS  @ 0x1E19;
char T4INPPS  @ 0x1E1A;
char T6INPPS  @ 0x1E1B;

char CCP1PPS  @ 0x1E1E;
char CCP2PPS  @ 0x1E1F;

char CWG1PPS  @ 0x1E39;

char CLCIN0PPS @ 0x1E3D;
char CLCIN1PPS @ 0x1E3E;
char CLCIN2PPS @ 0x1E3F;
char CLCIN3PPS @ 0x1E40;
char RX1PPS   @ 0x1E41;
char RX1DTPPS @ RX1PPS;
char CK1PPS   @ 0x1E42;
char TX1CKPPS @ CK1PPS;
char RX2PPS   @ 0x1E43;
char RX2DTPPS @ RX2PPS;
char CK2PPS   @ 0x1E44;
char TX2CKPPS @ CK2PPS;

char SSP1CLKPPS @ 0x1E47;
char SSP1DATPPS @ 0x1E48;
char SSP1SSPPS @ 0x1E49;
char SSP2CLKPPS @ 0x1E4A;
char SSP2DATPPS @ 0x1E4B;
char SSP2SSPPS @ 0x1E4C;

char ADACTPPS @ 0x1E50;

char ANSELA   @ 0x1E8C;
char WPUA     @ 0x1E8D;
char ODCONA   @ 0x1E8E;
char SLRCONA  @ 0x1E8F;
char INLVLA   @ 0x1E90;
char IOCAP    @ 0x1E91;
char IOCAN    @ 0x1E92;
char IOCAF    @ 0x1E93;

char RA1I2C   @ 0x1EE1;
char RA2I2C   @ 0x1EE2;

char UMTOAP   @ 0x1F0C;
char UMTOAL   @ 0x1F0D;
char UMTOAH   @ 0x1F0E;

char STATUS_SHAD @ 0x1FE4;
char WREG_SHAD @ 0x1FE5;
char BSR_SHAD @ 0x1FE6;
char PCLATH_SHAD @ 0x1FE7;
char FSR0_SHAD @ 0x1FE8;
char FSR0L_SHAD @ FSR0_SHAD;
char FSR0H_SHAD @ 0x1FE9;
char FSR1_SHAD @ 0x1FEA;
char FSR1L_SHAD @ FSR1_SHAD;
char FSR1H_SHAD @ 0x1FEB;

char STKPTR   @ 0x1FED;
char TOSL     @ 0x1FEE;
char TOSH     @ 0x1FEF;


bit INTEDG   @ INTCON.0;
bit INTCON_INTEDG @ INTCON.0;
bit PEIE     @ INTCON.6;
bit INTCON_PEIE @ INTCON.6;
bit GIE      @ INTCON.7;
bit INTCON_GIE @ INTCON.7;

bit RA0      @ PORTA.0;
bit RA1      @ PORTA.1;
bit RA2      @ PORTA.2;
bit RA3      @ PORTA.3;
bit RA4      @ PORTA.4;
bit RA5      @ PORTA.5;

bit TRISA0   @ TRISA.0;
bit TRISA1   @ TRISA.1;
bit TRISA2   @ TRISA.2;
bit TRISA4   @ TRISA.4;
bit TRISA5   @ TRISA.5;

bit LATA0    @ LATA.0;
bit LATA1    @ LATA.1;
bit LATA2    @ LATA.2;
bit LATA4    @ LATA.4;
bit LATA5    @ LATA.5;

bit INTF     @ PIR0.0;
bit PIR0_INTF @ PIR0.0;
bit IOCIF    @ PIR0.4;
bit PIR0_IOCIF @ PIR0.4;
bit TMR0IF   @ PIR0.5;
bit PIR0_TMR0IF @ PIR0.5;

bit NVMIF    @ PIR1.0;
bit PIR1_NVMIF @ PIR1.0;
bit ACTIF    @ PIR1.2;
bit PIR1_ACTIF @ PIR1.2;
bit TMR1IF   @ PIR1.3;
bit PIR1_TMR1IF @ PIR1.3;
bit TMR1GIF  @ PIR1.4;
bit PIR1_TMR1GIF @ PIR1.4;
bit TMR3IF   @ PIR1.5;
bit PIR1_TMR3IF @ PIR1.5;
bit TMR3GIF  @ PIR1.6;
bit PIR1_TMR3GIF @ PIR1.6;
bit TMR2IF   @ PIR1.7;
bit PIR1_TMR2IF @ PIR1.7;

bit TMR4IF   @ PIR2.0;
bit PIR2_TMR4IF @ PIR2.0;
bit TMR6IF   @ PIR2.1;
bit PIR2_TMR6IF @ PIR2.1;
bit CCP1IF   @ PIR2.2;
bit PIR2_CCP1IF @ PIR2.2;
bit CCP2IF   @ PIR2.3;
bit PIR2_CCP2IF @ PIR2.3;
bit NCO1IF   @ PIR2.4;
bit PIR2_NCO1IF @ PIR2.4;
bit CWG1IF   @ PIR2.5;
bit PIR2_CWG1IF @ PIR2.5;
bit CLC1IF   @ PIR2.6;
bit PIR2_CLC1IF @ PIR2.6;
bit CLC2IF   @ PIR2.7;
bit PIR2_CLC2IF @ PIR2.7;

bit CLC3IF   @ PIR3.0;
bit PIR3_CLC3IF @ PIR3.0;
bit CLC4IF   @ PIR3.1;
bit PIR3_CLC4IF @ PIR3.1;
bit TX1IF    @ PIR3.2;
bit PIR3_TX1IF @ PIR3.2;
bit RC1IF    @ PIR3.3;
bit PIR3_RC1IF @ PIR3.3;
bit TX2IF    @ PIR3.4;
bit PIR3_TX2IF @ PIR3.4;
bit RC2IF    @ PIR3.5;
bit PIR3_RC2IF @ PIR3.5;
bit SSP1IF   @ PIR3.6;
bit PIR3_SSP1IF @ PIR3.6;
bit BCL1IF   @ PIR3.7;
bit PIR3_BCL1IF @ PIR3.7;

bit SSP2IF   @ PIR4.0;
bit PIR4_SSP2IF @ PIR4.0;
bit BCL2IF   @ PIR4.1;
bit PIR4_BCL2IF @ PIR4.1;
bit CM1IF    @ PIR4.2;
bit PIR4_CM1IF @ PIR4.2;
bit ADIF     @ PIR4.3;
bit PIR4_ADIF @ PIR4.3;
bit ADTIF    @ PIR4.4;
bit PIR4_ADTIF @ PIR4.4;
bit ZCDIF    @ PIR4.5;
bit PIR4_ZCDIF @ PIR4.5;

bit INTE     @ PIE0.0;
bit PIE0_INTE @ PIE0.0;
bit IOCIE    @ PIE0.4;
bit PIE0_IOCIE @ PIE0.4;
bit TMR0IE   @ PIE0.5;
bit PIE0_TMR0IE @ PIE0.5;

bit NVMIE    @ PIE1.0;
bit PIE1_NVMIE @ PIE1.0;
bit ACTIE    @ PIE1.2;
bit PIE1_ACTIE @ PIE1.2;
bit TMR1IE   @ PIE1.3;
bit PIE1_TMR1IE @ PIE1.3;
bit TMR1GIE  @ PIE1.4;
bit PIE1_TMR1GIE @ PIE1.4;
bit TMR3IE   @ PIE1.5;
bit PIE1_TMR3IE @ PIE1.5;
bit TMR3GIE  @ PIE1.6;
bit PIE1_TMR3GIE @ PIE1.6;
bit TMR2IE   @ PIE1.7;
bit PIE1_TMR2IE @ PIE1.7;

bit TMR4IE   @ PIE2.0;
bit PIE2_TMR4IE @ PIE2.0;
bit TMR6IE   @ PIE2.1;
bit PIE2_TMR6IE @ PIE2.1;
bit CCP1IE   @ PIE2.2;
bit PIE2_CCP1IE @ PIE2.2;
bit CCP2IE   @ PIE2.3;
bit PIE2_CCP2IE @ PIE2.3;
bit NCO1IE   @ PIE2.4;
bit PIE2_NCO1IE @ PIE2.4;
bit CWG1IE   @ PIE2.5;
bit PIE2_CWG1IE @ PIE2.5;
bit CLC1IE   @ PIE2.6;
bit PIE2_CLC1IE @ PIE2.6;
bit CLC2IE   @ PIE2.7;
bit PIE2_CLC2IE @ PIE2.7;

bit CLC3IE   @ PIE3.0;
bit PIE3_CLC3IE @ PIE3.0;
bit CLC4IE   @ PIE3.1;
bit PIE3_CLC4IE @ PIE3.1;
bit TX1IE    @ PIE3.2;
bit PIE3_TX1IE @ PIE3.2;
bit RC1IE    @ PIE3.3;
bit PIE3_RC1IE @ PIE3.3;
bit TX2IE    @ PIE3.4;
bit PIE3_TX2IE @ PIE3.4;
bit RC2IE    @ PIE3.5;
bit PIE3_RC2IE @ PIE3.5;
bit SSP1IE   @ PIE3.6;
bit PIE3_SSP1IE @ PIE3.6;
bit BCL1IE   @ PIE3.7;
bit PIE3_BCL1IE @ PIE3.7;

bit SSP2IE   @ PIE4.0;
bit PIE4_SSP2IE @ PIE4.0;
bit BCL2IE   @ PIE4.1;
bit PIE4_BCL2IE @ PIE4.1;
bit CM1IE    @ PIE4.2;
bit PIE4_CM1IE @ PIE4.2;
bit ADIE     @ PIE4.3;
bit PIE4_ADIE @ PIE4.3;
bit ADTIE    @ PIE4.4;
bit PIE4_ADTIE @ PIE4.4;
bit ZCDIE    @ PIE4.5;
bit PIE4_ZCDIE @ PIE4.5;

bit WDTCON_SEN @ WDTCON.0;
bit SWDTEN   @ WDTCON.0;
bit WDTCON_SWDTEN @ WDTCON.0;
bit WDTPS0   @ WDTCON.1;
bit WDTCON_PS0 @ WDTCON.1;
bit WDTPS1   @ WDTCON.2;
bit WDTCON_PS1 @ WDTCON.2;
bit WDTPS2   @ WDTCON.3;
bit WDTCON_PS2 @ WDTCON.3;
bit WDTPS3   @ WDTCON.4;
bit WDTCON_PS3 @ WDTCON.4;
bit WDTPS4   @ WDTCON.5;
bit WDTCON_PS4 @ WDTCON.5;
bit WDTCON_CS @ WDTCON.7;
bit WDTCS    @ WDTCON.7;

bit BORRDY   @ BORCON.0;
bit BORCON_BORRDY @ BORCON.0;
bit SBOREN   @ BORCON.7;
bit BORCON_SBOREN @ BORCON.7;

bit BOR_     @ PCON0.0;
bit PCON0_BOR_ @ PCON0.0;
bit POR_     @ PCON0.1;
bit PCON0_POR_ @ PCON0.1;
bit RI_      @ PCON0.2;
bit PCON0_RI_ @ PCON0.2;
bit RMCLR_   @ PCON0.3;
bit PCON0_RMCLR_ @ PCON0.3;
bit RWDT_    @ PCON0.4;
bit PCON0_RWDT_ @ PCON0.4;
bit STKUNF   @ PCON0.6;
bit PCON0_STKUNF @ PCON0.6;
bit STKOVF   @ PCON0.7;
bit PCON0_STKOVF @ PCON0.7;

bit MEMV_    @ PCON1.1;
bit PCON1_MEMV_ @ PCON1.1;

bit T0CON0_OUTPS0 @ T0CON0.0;
bit T0OUTPS0 @ T0CON0.0;
bit T0CON0_OUTPS1 @ T0CON0.1;
bit T0OUTPS1 @ T0CON0.1;
bit T0CON0_OUTPS2 @ T0CON0.2;
bit T0OUTPS2 @ T0CON0.2;
bit T0CON0_OUTPS3 @ T0CON0.3;
bit T0OUTPS3 @ T0CON0.3;
bit T0CON0_MD16 @ T0CON0.4;
bit T0CON0_T0MD16 @ T0CON0.4;
bit T016BIT  @ T0CON0.4;
bit T0CON0_OUT @ T0CON0.5;
bit T0OUT    @ T0CON0.5;
bit T0CON0_EN @ T0CON0.7;
bit T0EN     @ T0CON0.7;

bit T0CON1_CKPS0 @ T0CON1.0;
bit T0CKPS0  @ T0CON1.0;
bit T0CON1_CKPS1 @ T0CON1.1;
bit T0CKPS1  @ T0CON1.1;
bit T0CON1_CKPS2 @ T0CON1.2;
bit T0CKPS2  @ T0CON1.2;
bit T0CON1_CKPS3 @ T0CON1.3;
bit T0CKPS3  @ T0CON1.3;
bit T0CON1_ASYNC @ T0CON1.4;
bit T0ASYNC  @ T0CON1.4;
bit T0CON1_CS0 @ T0CON1.5;
bit T0CS0    @ T0CON1.5;
bit T0CON1_CS1 @ T0CON1.6;
bit T0CS1    @ T0CON1.6;
bit T0CON1_CS2 @ T0CON1.7;
bit T0CS2    @ T0CON1.7;

bit COSC0    @ OSCCON2.4;
bit OSCCON2_COSC0 @ OSCCON2.4;
bit COSC1    @ OSCCON2.5;
bit OSCCON2_COSC1 @ OSCCON2.5;
bit COSC2    @ OSCCON2.6;
bit OSCCON2_COSC2 @ OSCCON2.6;

bit SOSCPWR  @ OSCCON3.6;
bit OSCCON3_SOSCPWR @ OSCCON3.6;

bit SFOR     @ OSCSTAT.1;
bit OSCSTAT_SFOR @ OSCSTAT.1;
bit ADOR     @ OSCSTAT.2;
bit OSCSTAT_ADOR @ OSCSTAT.2;
bit SOR      @ OSCSTAT.3;
bit OSCSTAT_SOR @ OSCSTAT.3;
bit LFOR     @ OSCSTAT.4;
bit OSCSTAT_LFOR @ OSCSTAT.4;
bit MFOR     @ OSCSTAT.5;
bit OSCSTAT_MFOR @ OSCSTAT.5;
bit HFOR     @ OSCSTAT.6;
bit OSCSTAT_HFOR @ OSCSTAT.6;

bit ADOEN    @ OSCEN.2;
bit OSCEN_ADOEN @ OSCEN.2;
bit SOSCEN   @ OSCEN.3;
bit OSCEN_SOSCEN @ OSCEN.3;
bit LFOEN    @ OSCEN.4;
bit OSCEN_LFOEN @ OSCEN.4;
bit MFOEN    @ OSCEN.5;
bit OSCEN_MFOEN @ OSCEN.5;
bit HFOEN    @ OSCEN.6;
bit OSCEN_HFOEN @ OSCEN.6;

bit FRQ0     @ OSCFRQ.0;
bit FRQ1     @ OSCFRQ.1;
bit FRQ2     @ OSCFRQ.2;

bit ACTORS   @ ACTCON.1;
bit ACTCON_ACTORS @ ACTCON.1;
bit ACTLOCK  @ ACTCON.3;
bit ACTCON_ACTLOCK @ ACTCON.3;
bit ACTUD    @ ACTCON.6;
bit ACTCON_ACTUD @ ACTCON.6;
bit ACTEN    @ ACTCON.7;
bit ACTCON_ACTEN @ ACTCON.7;

bit T1CON_ON @ T1CON.0;
bit TMR1ON   @ T1CON.0;
bit T1CON_TMR1ON @ T1CON.0;
bit T1CON_RD16 @ T1CON.1;
bit T1RD16   @ T1CON.1;
bit T1CON_SYNC_ @ T1CON.2;
bit T1SYNC_  @ T1CON.2;
bit T1CKPS0  @ T1CON.4;
bit T1CON_CKPS0 @ T1CON.4;
bit T1CKPS1  @ T1CON.5;
bit T1CON_CKPS1 @ T1CON.5;

bit T1GCON_GVAL @ T1GCON.2;
bit T1GVAL   @ T1GCON.2;
bit T1GCON_GGO_nDONE @ T1GCON.3;
bit T1GGO    @ T1GCON.3;
bit T1GCON_T1GGO @ T1GCON.3;
bit T1GCON_GSPM @ T1GCON.4;
bit T1GSPM   @ T1GCON.4;
bit T1GCON_GTM @ T1GCON.5;
bit T1GTM    @ T1GCON.5;
bit T1GCON_GPOL @ T1GCON.6;
bit T1GPOL   @ T1GCON.6;
bit T1GCON_GE @ T1GCON.7;
bit T1GE     @ T1GCON.7;

bit T3CON_ON @ T3CON.0;
bit TMR3ON   @ T3CON.0;
bit T3CON_TMR3ON @ T3CON.0;
bit T3CON_RD16 @ T3CON.1;
bit T3RD16   @ T3CON.1;
bit T3CON_SYNC_ @ T3CON.2;
bit T3SYNC_  @ T3CON.2;
bit T3CKPS0  @ T3CON.4;
bit T3CON_CKPS0 @ T3CON.4;
bit T3CKPS1  @ T3CON.5;
bit T3CON_CKPS1 @ T3CON.5;

bit T3GCON_GVAL @ T3GCON.2;
bit T3GVAL   @ T3GCON.2;
bit T3GCON_GGO_nDONE @ T3GCON.3;
bit T3GGO    @ T3GCON.3;
bit T3GCON_T3GGO @ T3GCON.3;
bit T3GCON_GSPM @ T3GCON.4;
bit T3GSPM   @ T3GCON.4;
bit T3GCON_GTM @ T3GCON.5;
bit T3GTM    @ T3GCON.5;
bit T3GCON_GPOL @ T3GCON.6;
bit T3GPOL   @ T3GCON.6;
bit T3GCON_GE @ T3GCON.7;
bit T3GE     @ T3GCON.7;

bit T2OUTPS0 @ T2CON.0;
bit T2CON_OUTPS0 @ T2CON.0;
bit T2OUTPS1 @ T2CON.1;
bit T2CON_OUTPS1 @ T2CON.1;
bit T2OUTPS2 @ T2CON.2;
bit T2CON_OUTPS2 @ T2CON.2;
bit T2OUTPS3 @ T2CON.3;
bit T2CON_OUTPS3 @ T2CON.3;
bit T2CKPS0  @ T2CON.4;
bit T2CON_CKPS0 @ T2CON.4;
bit T2CKPS1  @ T2CON.5;
bit T2CON_CKPS1 @ T2CON.5;
bit T2CKPS2  @ T2CON.6;
bit T2CON_CKPS2 @ T2CON.6;
bit T2CON_ON @ T2CON.7;
bit T2ON     @ T2CON.7;
bit TMR2ON   @ T2CON.7;
bit T2CON_TMR2ON @ T2CON.7;

bit T2HLT_MODE0 @ T2HLT.0;
bit T2MODE0  @ T2HLT.0;
bit T2HLT_MODE1 @ T2HLT.1;
bit T2MODE1  @ T2HLT.1;
bit T2HLT_MODE2 @ T2HLT.2;
bit T2MODE2  @ T2HLT.2;
bit T2HLT_MODE3 @ T2HLT.3;
bit T2MODE3  @ T2HLT.3;
bit T2HLT_MODE4 @ T2HLT.4;
bit T2MODE4  @ T2HLT.4;
bit T2HLT_CSYNC @ T2HLT.5;
bit T2HLT_CKSYNC @ T2HLT.5;
bit T2CSYNC  @ T2HLT.5;
bit T2HLT_CPOL @ T2HLT.6;
bit T2HLT_CKPOL @ T2HLT.6;
bit T2CPOL   @ T2HLT.6;
bit T2HLT_PSYNC @ T2HLT.7;
bit T2PSYNC  @ T2HLT.7;

bit T4OUTPS0 @ T4CON.0;
bit T4CON_OUTPS0 @ T4CON.0;
bit T4OUTPS1 @ T4CON.1;
bit T4CON_OUTPS1 @ T4CON.1;
bit T4OUTPS2 @ T4CON.2;
bit T4CON_OUTPS2 @ T4CON.2;
bit T4OUTPS3 @ T4CON.3;
bit T4CON_OUTPS3 @ T4CON.3;
bit T4CKPS0  @ T4CON.4;
bit T4CON_CKPS0 @ T4CON.4;
bit T4CKPS1  @ T4CON.5;
bit T4CON_CKPS1 @ T4CON.5;
bit T4CKPS2  @ T4CON.6;
bit T4CON_CKPS2 @ T4CON.6;
bit T4CON_ON @ T4CON.7;
bit T4ON     @ T4CON.7;
bit TMR4ON   @ T4CON.7;
bit T4CON_TMR4ON @ T4CON.7;

bit T4HLT_MODE0 @ T4HLT.0;
bit T4MODE0  @ T4HLT.0;
bit T4HLT_MODE1 @ T4HLT.1;
bit T4MODE1  @ T4HLT.1;
bit T4HLT_MODE2 @ T4HLT.2;
bit T4MODE2  @ T4HLT.2;
bit T4HLT_MODE3 @ T4HLT.3;
bit T4MODE3  @ T4HLT.3;
bit T4HLT_MODE4 @ T4HLT.4;
bit T4MODE4  @ T4HLT.4;
bit T4HLT_CSYNC @ T4HLT.5;
bit T4HLT_CKSYNC @ T4HLT.5;
bit T4CSYNC  @ T4HLT.5;
bit T4HLT_CPOL @ T4HLT.6;
bit T4HLT_CKPOL @ T4HLT.6;
bit T4CPOL   @ T4HLT.6;
bit T4HLT_PSYNC @ T4HLT.7;
bit T4PSYNC  @ T4HLT.7;

bit T6OUTPS0 @ T6CON.0;
bit T6CON_OUTPS0 @ T6CON.0;
bit T6OUTPS1 @ T6CON.1;
bit T6CON_OUTPS1 @ T6CON.1;
bit T6OUTPS2 @ T6CON.2;
bit T6CON_OUTPS2 @ T6CON.2;
bit T6OUTPS3 @ T6CON.3;
bit T6CON_OUTPS3 @ T6CON.3;
bit T6CKPS0  @ T6CON.4;
bit T6CON_CKPS0 @ T6CON.4;
bit T6CKPS1  @ T6CON.5;
bit T6CON_CKPS1 @ T6CON.5;
bit T6CKPS2  @ T6CON.6;
bit T6CON_CKPS2 @ T6CON.6;
bit T6CON_ON @ T6CON.7;
bit T6ON     @ T6CON.7;
bit TMR6ON   @ T6CON.7;
bit T6CON_TMR6ON @ T6CON.7;

bit T6HLT_MODE0 @ T6HLT.0;
bit T6MODE0  @ T6HLT.0;
bit T6HLT_MODE1 @ T6HLT.1;
bit T6MODE1  @ T6HLT.1;
bit T6HLT_MODE2 @ T6HLT.2;
bit T6MODE2  @ T6HLT.2;
bit T6HLT_MODE3 @ T6HLT.3;
bit T6MODE3  @ T6HLT.3;
bit T6HLT_MODE4 @ T6HLT.4;
bit T6MODE4  @ T6HLT.4;
bit T6HLT_CSYNC @ T6HLT.5;
bit T6HLT_CKSYNC @ T6HLT.5;
bit T6CSYNC  @ T6HLT.5;
bit T6HLT_CPOL @ T6HLT.6;
bit T6HLT_CKPOL @ T6HLT.6;
bit T6CPOL   @ T6HLT.6;
bit T6HLT_PSYNC @ T6HLT.7;
bit T6PSYNC  @ T6HLT.7;

bit CCP1CON_MODE0 @ CCP1CON.0;
bit CCP1MODE0 @ CCP1CON.0;
bit CCP1CON_MODE1 @ CCP1CON.1;
bit CCP1MODE1 @ CCP1CON.1;
bit CCP1CON_MODE2 @ CCP1CON.2;
bit CCP1MODE2 @ CCP1CON.2;
bit CCP1CON_MODE3 @ CCP1CON.3;
bit CCP1MODE3 @ CCP1CON.3;
bit CCP1CON_FMT @ CCP1CON.4;
bit CCP1FMT  @ CCP1CON.4;
bit CCP1CON_OUT @ CCP1CON.5;
bit CCP1OUT  @ CCP1CON.5;
bit CCP1CON_EN @ CCP1CON.7;
bit CCP1EN   @ CCP1CON.7;
bit CCP1CON_P1M1 @ CCP1CON.7;

bit CCP2CON_MODE0 @ CCP2CON.0;
bit CCP2MODE0 @ CCP2CON.0;
bit CCP2CON_MODE1 @ CCP2CON.1;
bit CCP2MODE1 @ CCP2CON.1;
bit CCP2CON_MODE2 @ CCP2CON.2;
bit CCP2MODE2 @ CCP2CON.2;
bit CCP2CON_MODE3 @ CCP2CON.3;
bit CCP2MODE3 @ CCP2CON.3;
bit CCP2CON_FMT @ CCP2CON.4;
bit CCP2FMT  @ CCP2CON.4;
bit CCP2CON_OUT @ CCP2CON.5;
bit CCP2OUT  @ CCP2CON.5;
bit CCP2CON_EN @ CCP2CON.7;
bit CCP2EN   @ CCP2CON.7;
bit CCP2CON_P2M1 @ CCP2CON.7;

bit PWM3CON_POL @ PWM3CON.4;
bit PWM3POL  @ PWM3CON.4;
bit PWM3CON_OUT @ PWM3CON.5;
bit PWM3OUT  @ PWM3CON.5;
bit PWM3CON_EN @ PWM3CON.7;
bit PWM3EN   @ PWM3CON.7;

bit PWM4CON_POL @ PWM4CON.4;
bit PWM4POL  @ PWM4CON.4;
bit PWM4CON_OUT @ PWM4CON.5;
bit PWM4OUT  @ PWM4CON.5;
bit PWM4CON_EN @ PWM4CON.7;
bit PWM4EN   @ PWM4CON.7;

bit PWM5CON_POL @ PWM5CON.4;
bit PWM5POL  @ PWM5CON.4;
bit PWM5CON_OUT @ PWM5CON.5;
bit PWM5OUT  @ PWM5CON.5;
bit PWM5CON_EN @ PWM5CON.7;
bit PWM5EN   @ PWM5CON.7;

bit NCO1CON_PFM @ NCO1CON.0;
bit NCO1PFM  @ NCO1CON.0;
bit NCO1CON_POL @ NCO1CON.4;
bit NCO1POL  @ NCO1CON.4;
bit NCO1CON_OUT @ NCO1CON.5;
bit NCO1OUT  @ NCO1CON.5;
bit NCO1CON_EN @ NCO1CON.7;
bit NCO1EN   @ NCO1CON.7;

bit NCO1CLK_CKS0 @ NCO1CLK.0;
bit NCO1CKS0 @ NCO1CLK.0;
bit NCO1CLK_CKS1 @ NCO1CLK.1;
bit NCO1CKS1 @ NCO1CLK.1;
bit NCO1CLK_CKS2 @ NCO1CLK.2;
bit NCO1CKS2 @ NCO1CLK.2;
bit NCO1CLK_CKS3 @ NCO1CLK.3;
bit NCO1CKS3 @ NCO1CLK.3;
bit NCO1CLK_PWS0 @ NCO1CLK.5;
bit NCO1PWS0 @ NCO1CLK.5;
bit NCO1CLK_PWS1 @ NCO1CLK.6;
bit NCO1PWS1 @ NCO1CLK.6;
bit NCO1CLK_PWS2 @ NCO1CLK.7;
bit NCO1PWS2 @ NCO1CLK.7;

bit CWG1CLK_CS @ CWG1CLK.0;
bit CWG1CS   @ CWG1CLK.0;

bit CWG1CON0_MODE0 @ CWG1CON0.0;
bit CWG1MODE0 @ CWG1CON0.0;
bit CWG1CON0_MODE1 @ CWG1CON0.1;
bit CWG1MODE1 @ CWG1CON0.1;
bit CWG1CON0_MODE2 @ CWG1CON0.2;
bit CWG1MODE2 @ CWG1CON0.2;
bit CWG1CON0_LD @ CWG1CON0.6;
bit CWG1LD   @ CWG1CON0.6;
bit CWG1CON0_EN @ CWG1CON0.7;
bit CWG1CON0_G1EN @ CWG1CON0.7;
bit CWG1EN   @ CWG1CON0.7;

bit CWG1CON1_POLA @ CWG1CON1.0;
bit CWG1POLA @ CWG1CON1.0;
bit CWG1CON1_POLB @ CWG1CON1.1;
bit CWG1POLB @ CWG1CON1.1;
bit CWG1CON1_POLC @ CWG1CON1.2;
bit CWG1POLC @ CWG1CON1.2;
bit CWG1CON1_POLD @ CWG1CON1.3;
bit CWG1POLD @ CWG1CON1.3;
bit CWG1CON1_IN @ CWG1CON1.5;
bit CWG1IN   @ CWG1CON1.5;

bit CWG1AS0_LSAC0 @ CWG1AS0.2;
bit CWG1LSAC0 @ CWG1AS0.2;
bit CWG1AS0_LSCA1 @ CWG1AS0.3;
bit CWG1LSAC1 @ CWG1AS0.3;
bit CWG1AS0_LSBD0 @ CWG1AS0.4;
bit CWG1LSBD0 @ CWG1AS0.4;
bit CWG1AS0_LSBD1 @ CWG1AS0.5;
bit CWG1LSBD1 @ CWG1AS0.5;
bit CWG1AS0_REN @ CWG1AS0.6;
bit CWG1REN  @ CWG1AS0.6;
bit CWG1AS0_SHUTDOWN @ CWG1AS0.7;
bit CWG1SHUTDOWN @ CWG1AS0.7;

bit CWG1AS1_AS0E @ CWG1AS1.0;
bit CWG1AS1_AS1E @ CWG1AS1.1;
bit CWG1AS1_AS2E @ CWG1AS1.2;
bit CWG1AS1_AS3E @ CWG1AS1.3;
bit CWG1AS1_AS4E @ CWG1AS1.4;
bit CWG1AS1_AS5E @ CWG1AS1.5;
bit CWG1AS1_AS6E @ CWG1AS1.6;
bit CWG1AS1_AS7E @ CWG1AS1.7;

bit CWG1STR_STRA @ CWG1STR.0;
bit CWG1STRA @ CWG1STR.0;
bit CWG1STR_STRB @ CWG1STR.1;
bit CWG1STRB @ CWG1STR.1;
bit CWG1STR_STRC @ CWG1STR.2;
bit CWG1STRC @ CWG1STR.2;
bit CWG1STR_STRD @ CWG1STR.3;
bit CWG1STRD @ CWG1STR.3;
bit CWG1STR_OVRA @ CWG1STR.4;
bit CWG1OVRA @ CWG1STR.4;
bit CWG1STR_OVRB @ CWG1STR.5;
bit CWG1OVRB @ CWG1STR.5;
bit CWG1STR_OVRC @ CWG1STR.6;
bit CWG1OVRC @ CWG1STR.6;
bit CWG1STR_OVRD @ CWG1STR.7;
bit CWG1OVRD @ CWG1STR.7;

bit CLCnCON_MODE0 @ CLCnCON.0;
bit CLCnCON_MODE1 @ CLCnCON.1;
bit CLCnCON_MODE2 @ CLCnCON.2;
bit CLCnCON_INTN @ CLCnCON.3;
bit CLCnCON_INTP @ CLCnCON.4;
bit CLCnCON_OUT @ CLCnCON.5;
bit CLCnCON_EN @ CLCnCON.7;

bit CLCnPOL_G1POL @ CLCnPOL.0;
bit CLCnPOL_G2POL @ CLCnPOL.1;
bit CLCnPOL_G3POL @ CLCnPOL.2;
bit CLCnPOL_G4POL @ CLCnPOL.3;
bit CLCnPOL_POL @ CLCnPOL.7;

bit CLCnGLS0_G1D1N @ CLCnGLS0.0;
bit CLCnGLS0_G1D1T @ CLCnGLS0.1;
bit CLCnGLS0_G1D2N @ CLCnGLS0.2;
bit CLCnGLS0_G1D2T @ CLCnGLS0.3;
bit CLCnGLS0_G1D3N @ CLCnGLS0.4;
bit CLCnGLS0_G1D3T @ CLCnGLS0.5;
bit CLCnGLS0_G1D4N @ CLCnGLS0.6;
bit CLCnGLS0_G1D4T @ CLCnGLS0.7;

bit CLCnGLS1_G2D1N @ CLCnGLS1.0;
bit CLCnGLS1_G2D1T @ CLCnGLS1.1;
bit CLCnGLS1_G2D2N @ CLCnGLS1.2;
bit CLCnGLS1_G2D2T @ CLCnGLS1.3;
bit CLCnGLS1_G2D3N @ CLCnGLS1.4;
bit CLCnGLS1_G2D3T @ CLCnGLS1.5;
bit CLCnGLS1_G2D4N @ CLCnGLS1.6;
bit CLCnGLS1_G2D4T @ CLCnGLS1.7;

bit CLCnGLS2_G3D1N @ CLCnGLS2.0;
bit CLCnGLS2_G3D1T @ CLCnGLS2.1;
bit CLCnGLS2_G3D2N @ CLCnGLS2.2;
bit CLCnGLS2_G3D2T @ CLCnGLS2.3;
bit CLCnGLS2_G3D3N @ CLCnGLS2.4;
bit CLCnGLS2_G3D3T @ CLCnGLS2.5;
bit CLCnGLS2_G3D4N @ CLCnGLS2.6;
bit CLCnGLS2_G3D4T @ CLCnGLS2.7;

bit CLCnGLS3_G4D1N @ CLCnGLS3.0;
bit CLCnGLS3_G4D1T @ CLCnGLS3.1;
bit CLCnGLS3_G4D2N @ CLCnGLS3.2;
bit CLCnGLS3_G4D2T @ CLCnGLS3.3;
bit CLCnGLS3_G4D3N @ CLCnGLS3.4;
bit CLCnGLS3_G4D3T @ CLCnGLS3.5;
bit CLCnGLS3_G4D4N @ CLCnGLS3.6;
bit CLCnGLS3_G4D4T @ CLCnGLS3.7;

bit CLC1OUT  @ CLCDATA.0;
bit CLCDATA_CLC1OUT @ CLCDATA.0;
bit CLC2OUT  @ CLCDATA.1;
bit CLCDATA_CLC2OUT @ CLCDATA.1;
bit CLC3OUT  @ CLCDATA.2;
bit CLCDATA_CLC3OUT @ CLCDATA.2;
bit CLC4OUT  @ CLCDATA.3;
bit CLCDATA_CLC4OUT @ CLCDATA.3;

bit RC1STA_RX9D @ RC1STA.0;
bit RC1STA_OERR @ RC1STA.1;
bit RC1STA_FERR @ RC1STA.2;
bit RC1STA_ADDEN @ RC1STA.3;
bit RC1STA_CREN @ RC1STA.4;
bit RC1STA_SREN @ RC1STA.5;
bit RC1STA_RX9 @ RC1STA.6;
bit RC1STA_SPEN @ RC1STA.7;

bit TX1STA_TX9D @ TX1STA.0;
bit TX1STA_TRMT @ TX1STA.1;
bit TX1STA_BRGH @ TX1STA.2;
bit TX1STA_SENDB @ TX1STA.3;
bit TX1STA_SYNC @ TX1STA.4;
bit TX1STA_TXEN @ TX1STA.5;
bit TX1STA_TX9 @ TX1STA.6;
bit TX1STA_CSRC @ TX1STA.7;

bit BAUD1CON_ABDEN @ BAUD1CON.0;
bit BAUD1CON_WUE @ BAUD1CON.1;
bit BAUD1CON_BRG16 @ BAUD1CON.3;
bit BAUD1CON_SCKP @ BAUD1CON.4;
bit BAUD1CON_RCIDL @ BAUD1CON.6;
bit BAUD1CON_ABDOVF @ BAUD1CON.7;

bit RC2STA_RX9D @ RC2STA.0;
bit RC2STA_OERR @ RC2STA.1;
bit RC2STA_FERR @ RC2STA.2;
bit RC2STA_ADDEN @ RC2STA.3;
bit RC2STA_CREN @ RC2STA.4;
bit RC2STA_SREN @ RC2STA.5;
bit RC2STA_RX9 @ RC2STA.6;
bit RC2STA_SPEN @ RC2STA.7;

bit TX2STA_TX9D @ TX2STA.0;
bit TX2STA_TRMT @ TX2STA.1;
bit TX2STA_BRGH @ TX2STA.2;
bit TX2STA_SENDB @ TX2STA.3;
bit TX2STA_SYNC @ TX2STA.4;
bit TX2STA_TXEN @ TX2STA.5;
bit TX2STA_TX9 @ TX2STA.6;
bit TX2STA_CSRC @ TX2STA.7;

bit BAUD2CON_ABDEN @ BAUD2CON.0;
bit BAUD2CON_WUE @ BAUD2CON.1;
bit BAUD2CON_BRG16 @ BAUD2CON.3;
bit BAUD2CON_SCKP @ BAUD2CON.4;
bit BAUD2CON_RCIDL @ BAUD2CON.6;
bit BAUD2CON_ABDOVF @ BAUD2CON.7;

bit SSP1STAT_BF @ SSP1STAT.0;
bit SSP1STAT_UA @ SSP1STAT.1;
bit SSP1STAT_R_nW @ SSP1STAT.2;
bit SSP1STAT_R_W @ SSP1STAT.2;
bit SSP1STAT_W_ @ SSP1STAT.2;
bit SSP1STAT_WRITE_ @ SSP1STAT.2;
bit SSP1STAT_READ_WRITE @ SSP1STAT.2;
bit SSP1STAT_I2C_READ @ SSP1STAT.2;
bit SSP1STAT_R @ SSP1STAT.2;
bit SSP1STAT_RW @ SSP1STAT.2;
bit SSP1STAT_W2_ @ SSP1STAT.2;
bit SSP1STAT_WRITE1_ @ SSP1STAT.2;
bit SSP1STAT_S @ SSP1STAT.3;
bit SSP1STAT_I2C_START @ SSP1STAT.3;
bit SSP1STAT_START @ SSP1STAT.3;
bit SSP1STAT_P @ SSP1STAT.4;
bit SSP1STAT_I2C_STOP @ SSP1STAT.4;
bit SSP1STAT_STOP @ SSP1STAT.4;
bit SSP1STAT_D_nA @ SSP1STAT.5;
bit SSP1STAT_D_A @ SSP1STAT.5;
bit SSP1STAT_A_ @ SSP1STAT.5;
bit SSP1STAT_ADDRESS_ @ SSP1STAT.5;
bit SSP1STAT_DATA_ADDRESS @ SSP1STAT.5;
bit SSP1STAT_I2C_DAT @ SSP1STAT.5;
bit SSP1STAT_D @ SSP1STAT.5;
bit SSP1STAT_DA @ SSP1STAT.5;
bit SSP1STAT_A2_ @ SSP1STAT.5;
bit SSP1STAT_ADDRESS1_ @ SSP1STAT.5;
bit SSP1STAT_CKE @ SSP1STAT.6;
bit SSP1STAT_SMP @ SSP1STAT.7;

bit SSP1CON1_SSPM0 @ SSP1CON1.0;
bit SSP1CON1_SSPM1 @ SSP1CON1.1;
bit SSP1CON1_SSPM2 @ SSP1CON1.2;
bit SSP1CON1_SSPM3 @ SSP1CON1.3;
bit SSP1CON1_CKP @ SSP1CON1.4;
bit SSP1CON1_SSPEN @ SSP1CON1.5;
bit SSP1CON1_SSPOV @ SSP1CON1.6;
bit SSP1CON1_WCOL @ SSP1CON1.7;

bit SSP1CON2_SEN @ SSP1CON2.0;
bit SSP1CON2_RSEN @ SSP1CON2.1;
bit SSP1CON2_ADMSK1 @ SSP1CON2.1;
bit SSP1CON2_PEN @ SSP1CON2.2;
bit SSP1CON2_ADMSK2 @ SSP1CON2.2;
bit SSP1CON2_RCEN @ SSP1CON2.3;
bit SSP1CON2_ADMSK3 @ SSP1CON2.3;
bit SSP1CON2_ACKEN @ SSP1CON2.4;
bit SSP1CON2_ADMSK4 @ SSP1CON2.4;
bit SSP1CON2_ACKDT @ SSP1CON2.5;
bit SSP1CON2_ADMSK5 @ SSP1CON2.5;
bit SSP1CON2_ACKSTAT @ SSP1CON2.6;
bit SSP1CON2_GCEN @ SSP1CON2.7;

bit SSP1CON3_DHEN @ SSP1CON3.0;
bit SSP1CON3_AHEN @ SSP1CON3.1;
bit SSP1CON3_SBCDE @ SSP1CON3.2;
bit SSP1CON3_SDAHT @ SSP1CON3.3;
bit SSP1CON3_BOEN @ SSP1CON3.4;
bit SSP1CON3_SCIE @ SSP1CON3.5;
bit SSP1CON3_PCIE @ SSP1CON3.6;
bit SSP1CON3_ACKTIM @ SSP1CON3.7;

bit SSP2STAT_BF @ SSP2STAT.0;
bit SSP2STAT_UA @ SSP2STAT.1;
bit SSP2STAT_R_nW @ SSP2STAT.2;
bit SSP2STAT_R_W @ SSP2STAT.2;
bit SSP2STAT_W_ @ SSP2STAT.2;
bit SSP2STAT_WRITE_ @ SSP2STAT.2;
bit SSP2STAT_READ_WRITE @ SSP2STAT.2;
bit SSP2STAT_I2C_READ @ SSP2STAT.2;
bit SSP2STAT_R @ SSP2STAT.2;
bit SSP2STAT_RW @ SSP2STAT.2;
bit SSP2STAT_W2_ @ SSP2STAT.2;
bit SSP2STAT_WRITE2_ @ SSP2STAT.2;
bit SSP2STAT_S @ SSP2STAT.3;
bit SSP2STAT_I2C_START @ SSP2STAT.3;
bit SSP2STAT_START @ SSP2STAT.3;
bit SSP2STAT_P @ SSP2STAT.4;
bit SSP2STAT_I2C_STOP @ SSP2STAT.4;
bit SSP2STAT_STOP @ SSP2STAT.4;
bit SSP2STAT_D_nA @ SSP2STAT.5;
bit SSP2STAT_D_A @ SSP2STAT.5;
bit SSP2STAT_A_ @ SSP2STAT.5;
bit SSP2STAT_ADDRESS_ @ SSP2STAT.5;
bit SSP2STAT_DATA_ADDRESS @ SSP2STAT.5;
bit SSP2STAT_I2C_DAT @ SSP2STAT.5;
bit SSP2STAT_D @ SSP2STAT.5;
bit SSP2STAT_DA @ SSP2STAT.5;
bit SSP2STAT_A2_ @ SSP2STAT.5;
bit SSP2STAT_ADDRESS2_ @ SSP2STAT.5;
bit SSP2STAT_CKE @ SSP2STAT.6;
bit SSP2STAT_SMP @ SSP2STAT.7;

bit SSP2CON1_SSPM0 @ SSP2CON1.0;
bit SSP2CON1_SSPM1 @ SSP2CON1.1;
bit SSP2CON1_SSPM2 @ SSP2CON1.2;
bit SSP2CON1_SSPM3 @ SSP2CON1.3;
bit SSP2CON1_CKP @ SSP2CON1.4;
bit SSP2CON1_SSPEN @ SSP2CON1.5;
bit SSP2CON1_SSPOV @ SSP2CON1.6;
bit SSP2CON1_WCOL @ SSP2CON1.7;

bit SSP2CON2_SEN @ SSP2CON2.0;
bit SSP2CON2_RSEN @ SSP2CON2.1;
bit SSP2CON2_ADMSK1 @ SSP2CON2.1;
bit SSP2CON2_PEN @ SSP2CON2.2;
bit SSP2CON2_ADMSK2 @ SSP2CON2.2;
bit SSP2CON2_RCEN @ SSP2CON2.3;
bit SSP2CON2_ADMSK3 @ SSP2CON2.3;
bit SSP2CON2_ACKEN @ SSP2CON2.4;
bit SSP2CON2_ADMSK4 @ SSP2CON2.4;
bit SSP2CON2_ACKDT @ SSP2CON2.5;
bit SSP2CON2_ADMSK5 @ SSP2CON2.5;
bit SSP2CON2_ACKSTAT @ SSP2CON2.6;
bit SSP2CON2_GCEN @ SSP2CON2.7;

bit SSP2CON3_DHEN @ SSP2CON3.0;
bit SSP2CON3_AHEN @ SSP2CON3.1;
bit SSP2CON3_SBCDE @ SSP2CON3.2;
bit SSP2CON3_SDAHT @ SSP2CON3.3;
bit SSP2CON3_BOEN @ SSP2CON3.4;
bit SSP2CON3_SCIE @ SSP2CON3.5;
bit SSP2CON3_PCIE @ SSP2CON3.6;
bit SSP2CON3_ACKTIM @ SSP2CON3.7;

bit ADFVR0   @ FVRCON.0;
bit FVRCON_ADFVR0 @ FVRCON.0;
bit ADFVR1   @ FVRCON.1;
bit FVRCON_ADFVR1 @ FVRCON.1;
bit CDAFVR0  @ FVRCON.2;
bit FVRCON_CDAFVR0 @ FVRCON.2;
bit CDAFVR1  @ FVRCON.3;
bit FVRCON_CDAFVR1 @ FVRCON.3;
bit TSRNG    @ FVRCON.4;
bit FVRCON_TSRNG @ FVRCON.4;
bit TSEN     @ FVRCON.5;
bit FVRCON_TSEN @ FVRCON.5;
bit FVRCON_RDY @ FVRCON.6;
bit FVRRDY   @ FVRCON.6;
bit FVRCON_EN @ FVRCON.7;
bit FVREN    @ FVRCON.7;

bit CPRDY    @ CPCON.0;
bit CPCON_CPRDY @ CPCON.0;
bit CPCON_CPT @ CPCON.1;
bit CPREQ    @ CPCON.2;
bit CPCON_CPREQ @ CPCON.2;
bit CPOS     @ CPCON.5;
bit CPCON_CPOS @ CPCON.5;

bit ZCDCON_INTN @ ZCDCON.0;
bit ZCDINTN  @ ZCDCON.0;
bit ZCDCON_INTP @ ZCDCON.1;
bit ZCDINTP  @ ZCDCON.1;
bit ZCDCON_POL @ ZCDCON.4;
bit ZCDPOL   @ ZCDCON.4;
bit ZCDCON_OUT @ ZCDCON.5;
bit ZCDOUT   @ ZCDCON.5;
bit ZCDCON_SEN @ ZCDCON.7;
bit ZCDSEN   @ ZCDCON.7;

bit CM1CON0_SYNC @ CM1CON0.0;
bit C1SYNC   @ CM1CON0.0;
bit CM1CON0_HYS @ CM1CON0.1;
bit C1HYS    @ CM1CON0.1;
bit CM1CON0_POL @ CM1CON0.4;
bit C1POL    @ CM1CON0.4;
bit CM1CON0_OUT @ CM1CON0.6;
bit C1OUT    @ CM1CON0.6;
bit CM1CON0_EN @ CM1CON0.7;
bit C1EN     @ CM1CON0.7;

bit CM1CON1_INTN @ CM1CON1.0;
bit C1INTN   @ CM1CON1.0;
bit CM1CON1_INTP @ CM1CON1.1;
bit C1INTP   @ CM1CON1.1;

bit CM1NCH_NCH0 @ CM1NCH.0;
bit C1NCH0   @ CM1NCH.0;
bit CM1NCH_NCH1 @ CM1NCH.1;
bit C1NCH1   @ CM1NCH.1;
bit CM1NCH_NCH2 @ CM1NCH.2;
bit C1NCH2   @ CM1NCH.2;

bit CM1PCH_PCH0 @ CM1PCH.0;
bit C1PCH0   @ CM1PCH.0;
bit CM1PCH_PCH1 @ CM1PCH.1;
bit C1PCH1   @ CM1PCH.1;
bit CM1PCH_PCH2 @ CM1PCH.2;
bit C1PCH2   @ CM1PCH.2;

bit CMOUT_C1OUT @ CMOUT.0;
bit MC1OUT   @ CMOUT.0;

bit DAC1CON_NSS @ DAC1CON.0;
bit DAC1NSS  @ DAC1CON.0;
bit DAC1CON_PSS0 @ DAC1CON.2;
bit DAC1PSS0 @ DAC1CON.2;
bit DAC1CON_PSS1 @ DAC1CON.3;
bit DAC1PSS1 @ DAC1CON.3;
bit DAC1CON_OE0 @ DAC1CON.4;
bit DAC1OE0  @ DAC1CON.4;
bit DAC1CON_OE1 @ DAC1CON.5;
bit DAC1OE1  @ DAC1CON.5;
bit DAC1CON_REFRNG @ DAC1CON.6;
bit DAC1REFRNG @ DAC1CON.6;
bit DAC1CON_EN @ DAC1CON.7;
bit DAC1EN   @ DAC1CON.7;

bit RD       @ NVMCON1.0;
bit NVMCON1_RD @ NVMCON1.0;
bit WR       @ NVMCON1.1;
bit NVMCON1_WR @ NVMCON1.1;
bit WREN     @ NVMCON1.2;
bit NVMCON1_WREN @ NVMCON1.2;
bit WRERR    @ NVMCON1.3;
bit NVMCON1_WRERR @ NVMCON1.3;
bit FREE     @ NVMCON1.4;
bit NVMCON1_FREE @ NVMCON1.4;
bit LWLO     @ NVMCON1.5;
bit NVMCON1_LWLO @ NVMCON1.5;
bit NVMREGS  @ NVMCON1.6;
bit NVMCON1_NVMREGS @ NVMCON1.6;

bit ADACC16  @ ADACCU.0;
bit ADACCU_ACC16 @ ADACCU.0;
bit ADACC17  @ ADACCU.1;
bit ADACCU_ACC17 @ ADACCU.1;

bit ADCON0_GO @ ADCON0.0;
bit ADGO     @ ADCON0.0;
bit ADCON0_DONE @ ADCON0.0;
bit ADCON0_GO_nDONE @ ADCON0.0;
bit ADCON0_FM0 @ ADCON0.2;
bit ADFM0    @ ADCON0.2;
bit ADCON0_CS @ ADCON0.4;
bit ADCS     @ ADCON0.4;
bit ADCON0_CONT @ ADCON0.6;
bit ADCONT   @ ADCON0.6;
bit ADCON0_ON @ ADCON0.7;
bit ADON     @ ADCON0.7;

bit ADCON1_DSEN @ ADCON1.0;
bit ADDSEN   @ ADCON1.0;
bit ADCON1_PCSC @ ADCON1.1;
bit ADPCSC   @ ADCON1.1;
bit ADCON1_GPOL @ ADCON1.5;
bit ADGPOL   @ ADCON1.5;
bit ADCON1_IPEN @ ADCON1.6;
bit ADIPEN   @ ADCON1.6;
bit ADCON1_PPOL @ ADCON1.7;
bit ADPPOL   @ ADCON1.7;

bit ADMD0    @ ADCON2.0;
bit ADCON2_MD0 @ ADCON2.0;
bit ADMD1    @ ADCON2.1;
bit ADCON2_MD1 @ ADCON2.1;
bit ADMD2    @ ADCON2.2;
bit ADCON2_MD2 @ ADCON2.2;
bit ADCON2_ACLR @ ADCON2.3;
bit ADACLR   @ ADCON2.3;
bit ADCRS0   @ ADCON2.4;
bit ADCON2_CRS0 @ ADCON2.4;
bit ADCRS1   @ ADCON2.5;
bit ADCON2_CRS1 @ ADCON2.5;
bit ADCRS2   @ ADCON2.6;
bit ADCON2_CRS2 @ ADCON2.6;
bit ADCON2_PSIS @ ADCON2.7;
bit ADPSIS   @ ADCON2.7;

bit ADTMD0   @ ADCON3.0;
bit ADCON3_TMD0 @ ADCON3.0;
bit ADTMD1   @ ADCON3.1;
bit ADCON3_TMD1 @ ADCON3.1;
bit ADTMD2   @ ADCON3.2;
bit ADCON3_TMD2 @ ADCON3.2;
bit ADCON3_SOI @ ADCON3.3;
bit ADSOI    @ ADCON3.3;
bit ADCALC0  @ ADCON3.4;
bit ADCON3_CALC0 @ ADCON3.4;
bit ADCALC1  @ ADCON3.5;
bit ADCON3_CALC1 @ ADCON3.5;
bit ADCALC2  @ ADCON3.6;
bit ADCON3_CALC2 @ ADCON3.6;

bit ADSTAT0  @ ADSTAT.0;
bit ADSTAT_STAT0 @ ADSTAT.0;
bit ADSTAT1  @ ADSTAT.1;
bit ADSTAT_STAT1 @ ADSTAT.1;
bit ADSTAT2  @ ADSTAT.2;
bit ADSTAT_STAT2 @ ADSTAT.2;
bit ADSTAT_MATH @ ADSTAT.4;
bit ADMATH   @ ADSTAT.4;
bit ADSTAT_LTHR @ ADSTAT.5;
bit ADLTHR   @ ADSTAT.5;
bit ADSTAT_UTHR @ ADSTAT.6;
bit ADUTHR   @ ADSTAT.6;
bit ADSTAT_AOV @ ADSTAT.7;
bit ADAOV    @ ADSTAT.7;
bit ADSTAT_ADOV @ ADSTAT.7;
bit ADSTAT_OV @ ADSTAT.7;

bit ADREF_PREF0 @ ADREF.0;
bit ADPREF0  @ ADREF.0;
bit ADREF_PREF1 @ ADREF.1;
bit ADPREF1  @ ADREF.1;

bit ADCG1A_CGA0 @ ADCG1A.0;
bit ADCG1A_CGA1 @ ADCG1A.1;
bit ADCG1A_CGA2 @ ADCG1A.2;
bit ADCG1A_CGA4 @ ADCG1A.4;
bit ADCG1A_CGA5 @ ADCG1A.5;

bit PPSLOCKED @ PPSLOCK.0;
bit PPSLOCK_PPSLOCKED @ PPSLOCK.0;

bit ANSELA0  @ ANSELA.0;
bit ANSA0    @ ANSELA.0;
bit ANSELA1  @ ANSELA.1;
bit ANSA1    @ ANSELA.1;
bit ANSELA2  @ ANSELA.2;
bit ANSA2    @ ANSELA.2;
bit ANSELA4  @ ANSELA.4;
bit ANSA4    @ ANSELA.4;
bit ANSELA5  @ ANSELA.5;
bit ANSA5    @ ANSELA.5;

bit WPUA0    @ WPUA.0;
bit WPUA1    @ WPUA.1;
bit WPUA2    @ WPUA.2;
bit WPUA3    @ WPUA.3;
bit WPUA4    @ WPUA.4;
bit WPUA5    @ WPUA.5;

bit ODCA0    @ ODCONA.0;
bit ODCA1    @ ODCONA.1;
bit ODCA2    @ ODCONA.2;
bit ODCA4    @ ODCONA.4;
bit ODCA5    @ ODCONA.5;

bit SLRA0    @ SLRCONA.0;
bit SLRA1    @ SLRCONA.1;
bit SLRA2    @ SLRCONA.2;
bit SLRA4    @ SLRCONA.4;
bit SLRA5    @ SLRCONA.5;

bit INLVLA0  @ INLVLA.0;
bit INLVLA1  @ INLVLA.1;
bit INLVLA2  @ INLVLA.2;
bit INLVLA4  @ INLVLA.4;
bit INLVLA5  @ INLVLA.5;

bit IOCAP0   @ IOCAP.0;
bit IOCAP1   @ IOCAP.1;
bit IOCAP2   @ IOCAP.2;
bit IOCAP3   @ IOCAP.3;
bit IOCAP4   @ IOCAP.4;
bit IOCAP5   @ IOCAP.5;

bit IOCAN0   @ IOCAN.0;
bit IOCAN1   @ IOCAN.1;
bit IOCAN2   @ IOCAN.2;
bit IOCAN3   @ IOCAN.3;
bit IOCAN4   @ IOCAN.4;
bit IOCAN5   @ IOCAN.5;

bit IOCAF0   @ IOCAF.0;
bit IOCAF1   @ IOCAF.1;
bit IOCAF2   @ IOCAF.2;
bit IOCAF3   @ IOCAF.3;
bit IOCAF4   @ IOCAF.4;
bit IOCAF5   @ IOCAF.5;

bit C_SHAD   @ STATUS_SHAD.0;
bit DC_SHAD  @ STATUS_SHAD.1;
bit Z_SHAD   @ STATUS_SHAD.2;


#if __CC5X__ >= 3600  &&  !defined _DISABLE_DYN_CONFIG
#pragma config /1 0x3FFF FEXTOSC = ECH // EC (external clock) above 16 MHz
#pragma config /1 0x3FFD FEXTOSC = ECL // EC (external clock) below 16 MHz
#pragma config /1 0x3FFC FEXTOSC = OFF // Oscillator not enabled
#pragma config /1 0x3FFF RSTOSC = EXTOSC // EXTOSC operating per FEXTOSC bits
#pragma config /1 0x3FEF RSTOSC = HFINTOSC_1MHz // HFINTOSC (1MHz)
#pragma config /1 0x3FDF RSTOSC = LFINTOSC // LFINTOSC
#pragma config /1 0x3FCF RSTOSC = SOSC // SOSC
#pragma config /1 0x3F8F RSTOSC = HFINTOSC_32MHz // HFINTOSC (32 MHz)
#pragma config /1 0x3EFF CLKOUTEN = ON // CLKOUT function is enabled; FOSC/4 clock appears at OSC2
#pragma config /1 0x3FFF CLKOUTEN = OFF // CLKOUT function is disabled; i/o or oscillator function on OSC2
#pragma config /1 0x3FFF VDDAR = HI // Internal analog systems are calibrated for operation between VDD = 2.3 - 5.5V
#pragma config /1 0x2FFF VDDAR = LO // Internal analog systems are calibrated for operation between VDD = 1.8 - 3.6V
#pragma config /2 0x3FFF MCLRE = EXTMCLR // If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
#pragma config /2 0x3FFE MCLRE = INTMCLR // If LVP = 0, MCLR is port-defined function; If LVP = 1, RA3 pin function is MCLR
#pragma config /2 0x3FFF PWRTS = PWRT_OFF // PWRT is disabled
#pragma config /2 0x3FFD PWRTS = PWRT_64 // PWRT set at 64 ms
#pragma config /2 0x3FFB PWRTS = PWRT_16 // PWRT set at 16 ms
#pragma config /2 0x3FF9 PWRTS = PWRT_1 // PWRT set at 1 ms
#pragma config /2 0x3FFF WDTE = ON // WDT enabled regardless of Sleep; SEN bit is ignored
#pragma config /2 0x3FF7 WDTE = NSLEEP // WDT enabled when sleep = 0, suspended when Sleep = 1; SEN is ignored
#pragma config /2 0x3FEF WDTE = SWDTEN // WDT enabled/disabled by SEN bit
#pragma config /2 0x3FE7 WDTE = OFF // WDT disabled; SEN is ignored
#pragma config /2 0x3FFF BOREN = ON // Brown-out Reset enabled, SBOREN bit is ignored
#pragma config /2 0x3FBF BOREN = NSLEEP // Brown-out Reset enabled while running, disabled in sleep; SBOREN is ignored
#pragma config /2 0x3F7F BOREN = SBOREN // Brown-out reset enabled according to SBOREN bit
#pragma config /2 0x3F3F BOREN = OFF // Brown-out reset disabled
#pragma config /2 0x3FFF DACAUTOEN = OFF // DAC Buffer reference range is determined by the REFRNG bit
#pragma config /2 0x3EFF DACAUTOEN = ON // DAC Buffer reference range is automatically determined by module hardware
#pragma config /2 0x3FFF BORV = LO // Brown-out Reset Voltage (VBOR) set to 1.9V
#pragma config /2 0x3DFF BORV = HI // Brown-out Reset Voltage (VBOR) is set to 2.85V
#pragma config /2 0x3FFF ZCD = OFF // ZCD module is disabled; ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
#pragma config /2 0x3BFF ZCD = ON // ZCD module is always enabled; ZCDMD and ZCDSEN bits are ignored
#pragma config /2 0x3FFF PPS1WAY = ON // The PPSLOCKED bit can be cleared and set only once after an unlocking sequence is executed; once PPSLOCKED is set, all future changes to PPS registers are prevented
#pragma config /2 0x37FF PPS1WAY = OFF // The PPSLOCKED bit can be set and cleared as needed (unlocking sequence is required)
#pragma config /2 0x3FFF STVREN = ON // Stack Overflow or Underflow will cause a reset
#pragma config /2 0x2FFF STVREN = OFF // Stack Overflow or Underflow will not cause a reset
#pragma config /4 0x3FFF BBSIZE = BB512 // 512 words boot block size
#pragma config /4 0x3FFE BBSIZE = BB1K // 1024 words boot block size
#pragma config /4 0x3FFD BBSIZE = BB2K // 2048 words boot block size
#pragma config /4 0x3FFC BBSIZE = BB4K // 4096 word boot block size
#pragma config /4 0x3FFB BBSIZE = BB8K // 8192 word boot block size
#pragma config /4 0x3FFA BBSIZE = BB16K // 16384 word boot block size
#pragma config /4 0x3FF9 BBSIZE = BB32K // * half of user program memory
#pragma config /4 0x3FF8 BBSIZE = BB64K // * half of user program memory
#pragma config /4 0x3FFF BBEN = OFF // Boot Block disabled
#pragma config /4 0x3FF7 BBEN = ON // Boot Block enabled
#pragma config /4 0x3FFF SAFEN = OFF // SAF disabled
#pragma config /4 0x3FEF SAFEN = ON // SAF enabled
#pragma config /4 0x3FFF WRTAPP = OFF // Application Block is NOT write protected
#pragma config /4 0x3F7F WRTAPP = ON // Application Block is write protected
#pragma config /4 0x3FFF WRTB = OFF // Boot Block is NOT write protected
#pragma config /4 0x3EFF WRTB = ON // Boot Block is write protected
#pragma config /4 0x3FFF WRTC = OFF // Configuration Register is NOT write protected
#pragma config /4 0x3DFF WRTC = ON // Configuration Register is write protected
#pragma config /4 0x3FFF WRTD = OFF // Data EEPROM is NOT write-protected
#pragma config /4 0x3BFF WRTD = ON // Data EEPROM is write-protected
#pragma config /4 0x3FFF WRTSAF = OFF // SAF is NOT write protected
#pragma config /4 0x37FF WRTSAF = ON // SAF is write protected
#pragma config /4 0x3FFF LVP = ON // Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Configuration bit is ignored
#pragma config /4 0x1FFF LVP = OFF // High Voltage on MCLR/Vpp must be used for programming
#pragma config /5 0x3FFF CP = OFF // Program Flash Memory code protection is disabled
#pragma config /5 0x3FFE CP = ON // Program Flash Memory code protection is enabled
#pragma config /5 0x3FFF CPD = OFF // EEPROM code protection is disabled
#pragma config /5 0x3FFD CPD = ON // EEPROM code protection is enabled
#endif
